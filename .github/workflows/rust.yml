name: Rust tests

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  RUSTUP_WINDOWS_PATH_ADD_BIN: 1
  # Change to specific Rust release to pin
  rust_stable: stable
  rust_nightly: nightly-2025-01-25
  rust_edition: '2021'
  rust_clippy: '1.88'
  rust_min: '1.88'

on:
  push:
    branches:
      - "master"
      - "feat/*"
    tags:
      - v*
    paths:
      - 'Rust/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'Rust/**'
      - '.github/workflows/rust.yml'

jobs:
  # Basic actions that must pass before we kick off more expensive tests.
  basics:
    name: basic checks
    runs-on: ubuntu-latest
    needs:
      - fmt
      - minrust
    steps:
      - run: exit 0

  # enforce standard Rust formating (rustfmt)
  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      # Check fmt
      - name: "rustfmt --check"
        # Workaround for rust-lang/cargo#7732
        run: |
          if ! rustfmt --check --edition ${{ env.rust_edition }} $(git ls-files '*.rs'); then
            printf "Please run \`rustfmt --edition ${{ env.rust_edition }} \$(git ls-files '*.rs')\` to fix rustfmt errors.\nSee CONTRIBUTING.md for more details.\n" >&2
            exit 1
          fi

  # test all rust bridges
  test-bridges:
    needs: basics
    name: test all Rust bridges
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@stable
        with:
            toolchain: ${{ env.rust_stable }}
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: Swatinem/rust-cache@v2
      - name: test all bridges
        run: |
          set -euxo pipefail
          for b in `ls`; do
            cd ${b}
            cargo nextest run
            cd ..
          done
        working-directory: Rust/bridges

  minrust:
    name: minrust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust ${{ env.rust_min }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_min }}
      - uses: Swatinem/rust-cache@v2
      - name: "cargo check"
        run: |
          for b in `ls`; do
            cd ${b}
            cargo check
            cd ..
          done
        working-directory: Rust/bridges
